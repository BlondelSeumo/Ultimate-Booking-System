{"version":3,"sources":["lazyload.js"],"names":["LazyLoad","runningOnBrowser","window","isBot","navigator","test","userAgent","supportsIntersectionObserver","supportsClassList","document","createElement","defaultSettings","elements_selector","container","threshold","thresholds","data_src","data_srcset","data_sizes","data_bg","class_loading","class_loaded","class_error","load_delay","auto_unobserve","callback_enter","callback_exit","callback_reveal","callback_loaded","callback_error","callback_finish","use_native","createInstance","classObj","options","event","instance","CustomEvent","detail","err","createEvent","initCustomEvent","dispatchEvent","getData","element","attribute","getAttribute","setData","value","attrName","setAttribute","removeAttribute","getWasProcessedData","setTimeoutData","getTimeoutData","callbackIfSet","callback","argument","updateLoadingCount","plusMinus","_loadingCount","_elements","length","_settings","getSourceTags","parentTag","childTag","sourceTags","i","children","tagName","push","setAttributeIfValue","setImageAttributes","settings","setSourcesFunctions","IMG","parent","parentNode","forEach","sourceTag","IFRAME","VIDEO","load","setSources","elements","elementToPurge","setSourcesFunction","filter","srcDataValue","bgDataValue","style","backgroundImage","concat","setSourcesBgImage","addClass","className","classList","add","addEventListener","eventName","handler","removeEventListener","removeEventListeners","loadHandler","errorHandler","eventHandler","success","target","remove","replace","RegExp","removeClass","addOneShotEventListeners","addEventListeners","managedTags","revealAndUnobserve","observer","_observer","revealElement","unobserve","cancelDelayLoad","timeoutId","clearTimeout","delayLoad","loadDelay","setTimeout","force","indexOf","setWasProcessedData","callback_set","setObserver","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","onEnter","onExit","root","rootMargin","nativeLazyTags","getElements","purgeProcessedElements","nodeSet","querySelectorAll","queryElements","Array","prototype","slice","call","customSettings","this","_extends","getInstanceSettings","update","_this","HTMLImageElement","shouldUseNative","observe","loadAll","destroy","_this2","_this3","optionsItem","autoInitialize","lazyLoadOptions"],"mappings":"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","file":"lazyload.iife.min.js","sourcesContent":["var LazyLoad = (function () {\n'use strict';\n\nconst runningOnBrowser = typeof window !== \"undefined\";\r\n\r\nconst isBot =\r\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\r\n\t(typeof navigator !== \"undefined\" &&\r\n\t\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));\r\n\r\nconst supportsIntersectionObserver =\r\n\trunningOnBrowser && \"IntersectionObserver\" in window;\r\n\r\nconst supportsClassList =\r\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst defaultSettings = {\r\n\telements_selector: \"img\",\r\n\tcontainer: isBot || runningOnBrowser ? document : null,\r\n\tthreshold: 300,\r\n\tthresholds: null,\r\n\tdata_src: \"src\",\r\n\tdata_srcset: \"srcset\",\r\n\tdata_sizes: \"sizes\",\r\n\tdata_bg: \"bg\",\r\n\tclass_loading: \"loading\",\r\n\tclass_loaded: \"loaded\",\r\n\tclass_error: \"error\",\r\n\tload_delay: 0,\r\n\tauto_unobserve: true,\r\n\tcallback_enter: null,\r\n\tcallback_exit: null,\r\n\tcallback_reveal: null,\r\n\tcallback_loaded: null,\r\n\tcallback_error: null,\r\n\tcallback_finish: null,\r\n\tuse_native: false\r\n};\r\n\r\nvar getInstanceSettings = customSettings => {\r\n\treturn Object.assign({}, defaultSettings, customSettings);\r\n};\n\n/* Creates instance and notifies it through the window element */\r\nconst createInstance = function(classObj, options) {\r\n\tvar event;\r\n\tlet eventString = \"LazyLoad::Initialized\";\r\n\tlet instance = new classObj(options);\r\n\ttry {\r\n\t\t// Works in modern browsers\r\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\r\n\t} catch (err) {\r\n\t\t// Works in Internet Explorer (all versions)\r\n\t\tevent = document.createEvent(\"CustomEvent\");\r\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\r\n\t}\r\n\twindow.dispatchEvent(event);\r\n};\r\n\r\n/* Auto initialization of one or more instances of lazyload, depending on the \r\n    options passed in (plain object or an array) */\r\nfunction autoInitialize(classObj, options) {\r\n\tif (!options) {\r\n\t\treturn;\r\n\t}\r\n\tif (!options.length) {\r\n\t\t// Plain object\r\n\t\tcreateInstance(classObj, options);\r\n\t} else {\r\n\t\t// Array of objects\r\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\r\n\t\t\tcreateInstance(classObj, optionsItem);\r\n\t\t}\r\n\t}\r\n}\n\nconst dataPrefix = \"data-\";\r\nconst processedDataName = \"was-processed\";\r\nconst timeoutDataName = \"ll-timeout\";\r\nconst trueString = \"true\";\r\n\r\nconst getData = (element, attribute) => {\r\n\treturn element.getAttribute(dataPrefix + attribute);\r\n};\r\n\r\nconst setData = (element, attribute, value) => {\r\n\tvar attrName = dataPrefix + attribute;\r\n\tif (value === null) {\r\n\t\telement.removeAttribute(attrName);\r\n\t\treturn;\r\n\t}\r\n\telement.setAttribute(attrName, value);\r\n};\r\n\r\nconst setWasProcessedData = element =>\r\n\tsetData(element, processedDataName, trueString);\r\n\r\nconst getWasProcessedData = element =>\r\n\tgetData(element, processedDataName) === trueString;\r\n\r\nconst setTimeoutData = (element, value) =>\r\n\tsetData(element, timeoutDataName, value);\r\n\r\nconst getTimeoutData = element => getData(element, timeoutDataName);\n\nconst purgeProcessedElements = elements => {\r\n\treturn elements.filter(element => !getWasProcessedData(element));\r\n};\r\n\r\nconst purgeOneElement = (elements, elementToPurge) => {\r\n\treturn elements.filter(element => element !== elementToPurge);\r\n};\n\nconst callbackIfSet = (callback, argument) => {\r\n\tif (callback) {\r\n\t\tcallback(argument);\r\n\t}\r\n};\n\nconst updateLoadingCount = (instance, plusMinus) => {\r\n\tinstance._loadingCount += plusMinus;\r\n\tif (instance._elements.length === 0 && instance._loadingCount === 0) {\r\n\t\tcallbackIfSet(instance._settings.callback_finish);\r\n\t}\r\n};\n\nconst getSourceTags = parentTag => {\r\n\tlet sourceTags = [];\r\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\r\n\t\tif (childTag.tagName === \"SOURCE\") {\r\n\t\t\tsourceTags.push(childTag);\r\n\t\t}\r\n\t}\r\n\treturn sourceTags;\r\n};\r\n\r\nconst setAttributeIfValue = (element, attrName, value) => {\r\n\tif (!value) {\r\n\t\treturn;\r\n\t}\r\n\telement.setAttribute(attrName, value);\r\n};\r\n\r\nconst setImageAttributes = (element, settings) => {\r\n\tsetAttributeIfValue(\r\n\t\telement,\r\n\t\t\"sizes\",\r\n\t\tgetData(element, settings.data_sizes)\r\n\t);\r\n\tsetAttributeIfValue(\r\n\t\telement,\r\n\t\t\"srcset\",\r\n\t\tgetData(element, settings.data_srcset)\r\n\t);\r\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\r\n};\r\n\r\nconst setSourcesImg = (element, settings) => {\r\n\tconst parent = element.parentNode;\r\n\r\n\tif (parent && parent.tagName === \"PICTURE\") {\r\n\t\tlet sourceTags = getSourceTags(parent);\r\n\t\tsourceTags.forEach(sourceTag => {\r\n\t\t\tsetImageAttributes(sourceTag, settings);\r\n\t\t});\r\n\t}\r\n\r\n\tsetImageAttributes(element, settings);\r\n};\r\n\r\nconst setSourcesIframe = (element, settings) => {\r\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\r\n};\r\n\r\nconst setSourcesVideo = (element, settings) => {\r\n\tlet sourceTags = getSourceTags(element);\r\n\tsourceTags.forEach(sourceTag => {\r\n\t\tsetAttributeIfValue(\r\n\t\t\tsourceTag,\r\n\t\t\t\"src\",\r\n\t\t\tgetData(sourceTag, settings.data_src)\r\n\t\t);\r\n\t});\r\n\tsetAttributeIfValue(element, \"src\", getData(element, settings.data_src));\r\n\telement.load();\r\n};\r\n\r\nconst setSourcesBgImage = (element, settings) => {\r\n\tconst srcDataValue = getData(element, settings.data_src);\r\n\tconst bgDataValue = getData(element, settings.data_bg);\r\n\r\n\tif (srcDataValue) {\r\n\t\telement.style.backgroundImage = `url(\"${srcDataValue}\")`;\r\n\t}\r\n\r\n\tif (bgDataValue) {\r\n\t\telement.style.backgroundImage = bgDataValue;\r\n\t}\r\n};\r\n\r\nconst setSourcesFunctions = {\r\n\tIMG: setSourcesImg,\r\n\tIFRAME: setSourcesIframe,\r\n\tVIDEO: setSourcesVideo\r\n};\r\n\r\nconst setSources = (element, instance) => {\r\n\tconst settings = instance._settings;\r\n\tconst tagName = element.tagName;\r\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\r\n\tif (setSourcesFunction) {\r\n\t\tsetSourcesFunction(element, settings);\r\n\t\tupdateLoadingCount(instance, 1);\r\n\t\tinstance._elements = purgeOneElement(instance._elements, element);\r\n\t\treturn;\r\n\t}\r\n\tsetSourcesBgImage(element, settings);\r\n};\n\nconst addClass = (element, className) => {\r\n\tif (supportsClassList) {\r\n\t\telement.classList.add(className);\r\n\t\treturn;\r\n\t}\r\n\telement.className += (element.className ? \" \" : \"\") + className;\r\n};\r\n\r\nconst removeClass = (element, className) => {\r\n\tif (supportsClassList) {\r\n\t\telement.classList.remove(className);\r\n\t\treturn;\r\n\t}\r\n\telement.className = element.className.\r\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\r\n\t\treplace(/^\\s+/, \"\").\r\n\t\treplace(/\\s+$/, \"\");\r\n};\n\nconst genericLoadEventName = \"load\";\r\nconst mediaLoadEventName = \"loadeddata\";\r\nconst errorEventName = \"error\";\r\n\r\nconst addEventListener = (element, eventName, handler) => {\r\n\telement.addEventListener(eventName, handler);\r\n};\r\n\r\nconst removeEventListener = (element, eventName, handler) => {\r\n\telement.removeEventListener(eventName, handler);\r\n};\r\n\r\nconst addEventListeners = (element, loadHandler, errorHandler) => {\r\n\taddEventListener(element, genericLoadEventName, loadHandler);\r\n\taddEventListener(element, mediaLoadEventName, loadHandler);\r\n\taddEventListener(element, errorEventName, errorHandler);\r\n};\r\n\r\nconst removeEventListeners = (element, loadHandler, errorHandler) => {\r\n\tremoveEventListener(element, genericLoadEventName, loadHandler);\r\n\tremoveEventListener(element, mediaLoadEventName, loadHandler);\r\n\tremoveEventListener(element, errorEventName, errorHandler);\r\n};\r\n\r\nconst eventHandler = function(event, success, instance) {\r\n\tvar settings = instance._settings;\r\n\tconst className = success ? settings.class_loaded : settings.class_error;\r\n\tconst callback = success\r\n\t\t? settings.callback_loaded\r\n\t\t: settings.callback_error;\r\n\tconst element = event.target;\r\n\r\n\tremoveClass(element, settings.class_loading);\r\n\taddClass(element, className);\r\n\tcallbackIfSet(callback, element);\r\n\r\n\tupdateLoadingCount(instance, -1);\r\n};\r\n\r\nconst addOneShotEventListeners = (element, instance) => {\r\n\tconst loadHandler = event => {\r\n\t\teventHandler(event, true, instance);\r\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\r\n\t};\r\n\tconst errorHandler = event => {\r\n\t\teventHandler(event, false, instance);\r\n\t\tremoveEventListeners(element, loadHandler, errorHandler);\r\n\t};\r\n\taddEventListeners(element, loadHandler, errorHandler);\r\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\r\n\r\nconst onEnter = (element, instance) => {\r\n\tconst settings = instance._settings;\r\n\tcallbackIfSet(settings.callback_enter, element);\r\n\tif (!settings.load_delay) {\r\n\t\trevealAndUnobserve(element, instance);\r\n\t\treturn;\r\n\t}\r\n\tdelayLoad(element, instance);\r\n};\r\n\r\nconst revealAndUnobserve = (element, instance) => {\r\n\tvar observer = instance._observer;\r\n\trevealElement(element, instance);\r\n\tif (observer && instance._settings.auto_unobserve) {\r\n\t\tobserver.unobserve(element);\r\n\t}\r\n};\r\n\r\nconst onExit = (element, instance) => {\r\n\tconst settings = instance._settings;\r\n\tcallbackIfSet(settings.callback_exit, element);\r\n\tif (!settings.load_delay) {\r\n\t\treturn;\r\n\t}\r\n\tcancelDelayLoad(element);\r\n};\r\n\r\nconst cancelDelayLoad = element => {\r\n\tvar timeoutId = getTimeoutData(element);\r\n\tif (!timeoutId) {\r\n\t\treturn; // do nothing if timeout doesn't exist\r\n\t}\r\n\tclearTimeout(timeoutId);\r\n\tsetTimeoutData(element, null);\r\n};\r\n\r\nconst delayLoad = (element, instance) => {\r\n\tvar loadDelay = instance._settings.load_delay;\r\n\tvar timeoutId = getTimeoutData(element);\r\n\tif (timeoutId) {\r\n\t\treturn; // do nothing if timeout already set\r\n\t}\r\n\ttimeoutId = setTimeout(function() {\r\n\t\trevealAndUnobserve(element, instance);\r\n\t\tcancelDelayLoad(element);\r\n\t}, loadDelay);\r\n\tsetTimeoutData(element, timeoutId);\r\n};\r\n\r\nconst revealElement = (element, instance, force) => {\r\n\tvar settings = instance._settings;\r\n\tif (!force && getWasProcessedData(element)) {\r\n\t\treturn; // element has already been processed and force wasn't true\r\n\t}\r\n\tif (managedTags.indexOf(element.tagName) > -1) {\r\n\t\taddOneShotEventListeners(element, instance);\r\n\t\taddClass(element, settings.class_loading);\r\n\t}\r\n\tsetSources(element, instance);\r\n\tsetWasProcessedData(element);\r\n\tcallbackIfSet(settings.callback_reveal, element);\r\n\tcallbackIfSet(settings.callback_set, element);\r\n};\n\nconst isIntersecting = entry =>\r\n\tentry.isIntersecting || entry.intersectionRatio > 0;\r\n\r\nconst getObserverSettings = settings => ({\r\n\troot: settings.container === document ? null : settings.container,\r\n\trootMargin: settings.thresholds || settings.threshold + \"px\"\r\n});\r\n\r\nconst setObserver = instance => {\r\n\tif (!supportsIntersectionObserver) {\r\n\t\treturn false;\r\n\t}\r\n\tinstance._observer = new IntersectionObserver(entries => {\r\n\t\tentries.forEach(entry =>\r\n\t\t\tisIntersecting(entry)\r\n\t\t\t\t? onEnter(entry.target, instance)\r\n\t\t\t\t: onExit(entry.target, instance)\r\n\t\t);\r\n\t}, getObserverSettings(instance._settings));\r\n\treturn true;\r\n};\n\nconst nativeLazyTags = [\"IMG\", \"IFRAME\"];\r\n\r\nconst shouldUseNative = settings =>\r\n\tsettings.use_native && \"loading\" in HTMLImageElement.prototype;\r\n\r\nconst loadAllNative = instance => {\r\n\tinstance._elements.forEach(element => {\r\n\t\tif (nativeLazyTags.indexOf(element.tagName) === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.setAttribute(\"loading\", \"lazy\");\r\n\t\trevealElement(element, instance);\r\n\t});\r\n};\n\nconst nodeSetToArray = nodeSet => Array.prototype.slice.call(nodeSet);\n\nconst queryElements = settings =>\r\n\tsettings.container.querySelectorAll(settings.elements_selector);\r\n\r\nconst getElements = (elements, settings) =>\r\n\tpurgeProcessedElements(nodeSetToArray(elements || queryElements(settings)));\n\nconst LazyLoad = function(customSettings, elements) {\r\n\tthis._settings = getInstanceSettings(customSettings);\r\n\tthis._loadingCount = 0;\r\n\tsetObserver(this);\r\n\tthis.update(elements);\r\n};\r\n\r\nLazyLoad.prototype = {\r\n\tupdate: function(elements) {\r\n\t\tvar settings = this._settings;\r\n\t\tthis._elements = getElements(elements, settings);\r\n\t\tif (isBot || !this._observer) {\r\n\t\t\tthis.loadAll();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (shouldUseNative(settings)) {\r\n\t\t\tloadAllNative(this);\r\n\t\t\tthis._elements = getElements(elements, settings);\r\n\t\t}\r\n\t\tthis._elements.forEach(element => {\r\n\t\t\tthis._observer.observe(element);\r\n\t\t});\r\n\t},\r\n\r\n\tdestroy: function() {\r\n\t\tif (this._observer) {\r\n\t\t\tthis._elements.forEach(element => {\r\n\t\t\t\tthis._observer.unobserve(element);\r\n\t\t\t});\r\n\t\t\tthis._observer = null;\r\n\t\t}\r\n\t\tthis._elements = null;\r\n\t\tthis._settings = null;\r\n\t},\r\n\r\n\tload: function(element, force) {\r\n\t\trevealElement(element, this, force);\r\n\t},\r\n\r\n\tloadAll: function() {\r\n\t\tthis._elements.forEach(element => {\r\n\t\t\trevealAndUnobserve(element, this);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/* Automatic instances creation if required (useful for async script loading) */\r\nif (runningOnBrowser) {\r\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\r\n}\n\nreturn LazyLoad;\n\n}());\n"]}